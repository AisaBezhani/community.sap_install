---
# 1. Role arguments are validated through meta/arguments_spec.yml (ansible >= 2.11)
# 2. Detect SAP solution to be configured (scale-up, scale-out, etc.)
#    * Play hosts must have SAP installed and landscape information discoverable ?!
# 3. Include tasks for parameter validation for the selected solution
#    * Certain parameters must match the target solution
#      (networking, IDs, number of nodes)
# 4. Include tasks for building the ha_cluster arguments for the selected solution
#    * scale-up, scale-out, scale-up + mtr, scale-out + mtr
# 5. Include ha_cluster role with the constructed parameters as role arguments
# 6. Add solution specific config
#    * srhook

# DONE: make sure to first respect 'ha_cluster' native variables
# Users can define 'ha_cluster' role parameters in their inventory

# TODO: Build all resource/constraint configuration variables based on
# simpler user input.
# - Make resources configuration modular, allowing additional VIPs, for example

# The SAP ID must follow a strict format and not use reserved special values
# TODO: This check may be better placed in a SAP role earlier in the chain...
- name: "{{ __tname }} Validate SAP System ID"
  ansible.builtin.assert:
    that:
      - sap_ha_cluster_hana_sid is defined
      - sap_ha_cluster_hana_sid|length == 3
      - sap_ha_cluster_hana_sid not in __sap_sid_prohibited
  tags: always

# Make sure that all parameters already set for 'ha_cluster' are also inherited.
# Add to the include file a task for each parameter which this SAP cluster role
# supports.
- name: "{{ __tname }} Include tasks for checking 'ha_cluster' predefinitions"
  ansible.builtin.include_tasks:
    file: ascertain_ha_cluster_in_inventory.yml
    apply:
      tags: always
  tags: always

# Determine which SAP landscape we are going to configure in the cluster.
# This is needed to include the landscape specific parameter values.
# The result will be parameters:
# - sap_ha_cluster_sap_type (values: scaleup, scaleout)
# - sap_ha_cluster_replication_type (values: mtr, ?)
- name: "{{ __tname }} Include tasks for SAP landscape calculation"
  ansible.builtin.include_tasks:
    file: ascertain_sap_landscape.yml
    apply:
      tags: check_sap
  tags: check_sap

# Determine if we are on a cloud platform
- name: "{{ __tname }} Include tasks for platform detection"
  ansible.builtin.include_tasks:
    file: ascertain_platform_type.yml
    apply:
      tags: check_platform
  tags: check_platform

# Copied from rhel-system-roles/roles/ha_cluster/tasks/main.yml and enhanced
# for additional environment settings.
- name: "{{ __tname }} Set platform/version specific variables"
  ansible.builtin.include_vars: "{{ __sap_ha_cluster_vars_file }}"
  loop:
    - "{{ ansible_facts['os_family'] }}.yml"
    - "{{ ansible_facts['distribution'] }}.yml"
    - >-
      {{ ansible_facts['distribution'] ~ '_' ~
      ansible_facts['distribution_major_version'] }}.yml
    - >-
      {{ ansible_facts['distribution'] ~ '_' ~
      ansible_facts['distribution_version'] }}.yml
    - "SAPHana_{{ sap_ha_cluster_sap_type }}.yml"
    - "SAPHana_{{ sap_ha_cluster_replication_type }}.yml"
    - "Platform_{{ __sap_ha_cluster_vm_asset_tag }}.yml"
  vars:
    __sap_ha_cluster_vars_file: "{{ role_path }}/vars/{{ item }}"
  when: __sap_ha_cluster_vars_file is file

- name: "{{ __tname }} Include common variable construction tasks"
  ansible.builtin.import_tasks: construct_vars_common.yml

- name: "{{ __tname }} Include variable construction for STONITH resources"
  ansible.builtin.import_tasks: construct_vars_stonith.yml

- name: "{{ __tname }} Include variable construction for SAP HANA common"
  ansible.builtin.include_tasks:
    file: construct_vars_hana_common.yml

- name: "{{ __tname }} Include variable construction for SAP HANA Scale-up"
  ansible.builtin.include_tasks:
    file: construct_vars_hana_scaleup.yml
  when: sap_ha_cluster_sap_type == 'scaleup'

- name: "{{ __tname }} Include variable construction for SAP HANA Scale-out"
  ansible.builtin.include_tasks:
    file: construct_vars_hana_scaleout.yml
  when: sap_ha_cluster_sap_type == 'scaleout'

# TODO: combine various definitions into one parameter for role include input
# For example, multiple resource primitives are defined in different places for
# different purpose. The result shall be a complete list of all the constructed
# resources.


# Before we are ready to call the ha_cluster role, we want to validate
# that the minimum required parameters are defined and not empty.
- name: "{{ __tname }} Validate parameters for 'ha_cluster' role input"
  ansible.builtin.assert:
    that:
      - __sap_ha_cluster_cluster_properties is defined
      - __sap_ha_cluster_extra_packages is defined
      - __sap_ha_cluster_resource_primitives is defined
      - __sap_ha_cluster_resource_clones is defined
      - __sap_ha_cluster_constraints_order is defined
      - __sap_ha_cluster_constraints_colocation is defined
#      - blahtest is defined
    fail_msg: "Cluster build parameter construction has failed for this parameter."

#### for debugging
#- name: "Fail here for now..."
#  ansible.builtin.fail:

### Up to here there has been NO changes, only environment validations and
### parameter constructions!

# include ha_cluster role from "linux-system-roles" (symlink to rhel-system-roles on rhel)
- name: "{{ __tname }} Include System Role 'ha_cluster'"
#  ansible.builtin.import_role:
#    name: linux-system-roles.ha_cluster
  ansible.builtin.include_role:
    name: linux-system-roles.ha_cluster
    apply:
      tags: ha_cluster
      no_log: true
  vars:
    ha_cluster_cluster_name: "{{ __sap_ha_cluster_cluster_name }}"
    ha_cluster_hacluster_password: "{{ __sap_ha_cluster_hacluster_password }}"
    ha_cluster_cluster_properties: "{{ __sap_ha_cluster_cluster_properties }}"
    __ha_cluster_repos: "{{ __sap_ha_cluster_repos }}"
    ha_cluster_properties: "{{ __sap_ha_cluster_cluster_properties }}"
    ha_cluster_extra_packages: "{{ __sap_ha_cluster_extra_packages }}"
    ha_cluster_resource_primitives: "{{ __sap_ha_cluster_resource_primitives }}"
    ha_cluster_resource_clones: "{{ __sap_ha_cluster_resource_clones }}"
    ha_cluster_constraints_order: "{{ __sap_ha_cluster_constraints_order }}"
    ha_cluster_constraints_colocation: "{{ __sap_ha_cluster_constraints_colocation }}"
    ha_cluster_fence_agent_packages: "{{ __sap_ha_cluster_fence_agent_packages }}"
#  no_log: true  # some parameters contain secrets
  tags: ha_cluster

#### from old ha role

- name: "{{ __tname }} Update resource default values"
  ansible.builtin.shell: |
    pcs resource defaults update resource-stickiness=1000
    pcs resource defaults update migration-threshold=5000
  changed_when: not ansible_check_mode

- name: "{{ __tname }} Include srHook configuration"
  ansible.builtin.include_tasks:
    file: configure_srhook.yml
    apply:
      tags: srhook
  tags: srhook
