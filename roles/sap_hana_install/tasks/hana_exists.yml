---

- name: HANA admin user check
  block:
    - name: Check for sidadm user
      command: getent passwd {{ sap_hana_install_sid | lower }}adm
      register: __sap_hana_install_register_getent_passwd_sidadm
      changed_when: no
      failed_when: no

# Reason for noqa: The variable is a substring of a user name
    - name: Assert that there is no sidadm user # noqa var-spacing
      assert:
        that: __sap_hana_install_register_getent_passwd_sidadm.rc != 0
        fail_msg: "FAIL: User '{{ sap_hana_install_sid | lower}}adm' exists!
                   Because of this, SAP HANA with SID '{{ sap_hana_install_sid }}' will not be installed."
        success_msg: "PASS: User '{{ sap_hana_install_sid | lower}}adm' does not exist."

  when: sap_hana_install_check_sidadm_user|d(true)

# The role supports specifying the SAP HANA group id in variable `sap_hana_install_groupid`, which is the id of the sapsys group.
# The SAP HANA installation will fail if there is already a group named sapsys but with a different ID. Let's better fail before.
- name: Check HANA admin group
  block:
    - name: Get info about the ID of the sapsys group
      command: getent group sapsys
      register: __sap_hana_install_register_getent_group_sapsys
      changed_when: no
      failed_when: no

    - name: In case there is a group sapsys, assert that its group ID is identical to sap_hana_install_groupid
      assert:
        that: "{{ __sap_hana_install_register_getent_group_sapsys.stdout.split(':')[2] }} == {{ sap_hana_install_groupid }}"
        success_msg: "PASS: The group ID of 'sapsys' is identical to the value of variable
                      sap_hana_install_groupid, which is '{{ sap_hana_install_groupid }}'"
        fail_msg: "FAIL: Group sapsys exists but with a different group ID than '{{ sap_hana_install_groupid }}',
	           which has been specified in variable sap_hana_install_groupid.
	           Because of this, SAP HANA with SID '{{ sap_hana_install_sid }}' will not be installed."
      when: __sap_hana_install_register_getent_group_sapsys.rc == 0

  when:
    - sap_hana_install_groupid is defined
    - sap_hana_install_groupid | string != "None"
    - sap_hana_install_groupid | string | length > 0

- name: "Get info about directory '/hana/shared/{{ sap_hana_install_sid }}'"
  stat:
    path: "/hana/shared/{{ sap_hana_install_sid }}"
  register: __sap_hana_install_register_stat_hana_shared_sid_assert
  failed_when: no

- name: "Assert that directory '/hana/shared/{{ sap_hana_install_sid }}' does not exist"
  assert:
    that: not __sap_hana_install_register_stat_hana_shared_sid_assert.stat.exists
    fail_msg: "FAIL: Directory '/hana/shared/{{ sap_hana_install_sid }}' exists!
               Because of this, SAP HANA with SID '{{ sap_hana_install_sid }}' will not be installed."
    success_msg: "PASS: Directory '/hana/shared/{{ sap_hana_install_sid }}' does not exist."

- name: "Get info about directory '/usr/sap/{{ sap_hana_install_sid }}'"
  stat:
    path: "/usr/sap/{{ sap_hana_install_sid }}"
  register: __sap_hana_install_register_stat_usr_sap_sid_assert
  failed_when: no

- name: "Assert that directory '/usr/sap/{{ sap_hana_install_sid }}' does not exist"
  assert:
    that: not __sap_hana_install_register_stat_usr_sap_sid_assert.stat.exists
    fail_msg: "FAIL: Directory '/usr/sap/{{ sap_hana_install_sid }}' exists!
               Because of this, SAP HANA with SID '{{ sap_hana_install_sid }}' will not be installed."
    success_msg: "PASS: Directory '/usr/sap/{{ sap_hana_install_sid }}' does not exist."

#    - name: Check if there is already a SAP HANA system with SID {{ sap_hana_install_sid }} and instance {{ sap_hana_install_instance_number }}
#      command: sapcontrol -nr {{ sap_hana_install_instance_number }} -function GetProcessList
#      register: __sap_hana_install_register_sapcontrol
#      failed_when: no
#
#    - name: display __sap_hana_install_register_sapcontrol
#      debug:
#        var: __sap_hana_install_register_sapcontrol
