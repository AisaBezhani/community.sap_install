---
# hdblcm prepare

# Create directory {{ sap_hana_install_software_extract_directory }}
# This is where all extracted .SAR files will be stored

- name: SAP HANA hdblcm prepare - Remove directory '{{ sap_hana_install_software_extract_directory }}'
  ansible.builtin.file:
    path: "{{ sap_hana_install_software_extract_directory }}"
    state: absent

- name: SAP HANA hdblcm prepare - Create directory '{{ sap_hana_install_software_extract_directory }}'
  ansible.builtin.file:
    path: "{{ sap_hana_install_software_extract_directory }}"
    state: directory
    mode: '0755'

- name: SAP HANA hdblcm prepare - Create status file '{{ sap_hana_install_software_extract_directory }}/__EXTRACTION_ONGOING__'
  ansible.builtin.file:
    path: "{{ sap_hana_install_software_extract_directory }}/__EXTRACTION_ONGOING__"
    state: touch
    mode: '0755'

- name: SAP HANA hdblcm prepare - Set fact for SAPCAR executable
  set_fact:
    __sap_hana_install_fact_sapcar_file_name: "{{ sap_hana_install_sapcar_file[0].name }}"

- name: SAP HANA hdblcm prepare - Get info about the SAPCAR executable
  stat:
    path: "{{ sap_hana_install_software_directory }}/{{ __sap_hana_install_fact_sapcar_file_name }}"
  register: __sap_hana_install_register_sapcar_stat_result
  changed_when: no
  failed_when: no

- name: SAP HANA hdblcm prepare - Assert that the SAPCAR executable is available
  assert:
    that: __sap_hana_install_register_sapcar_stat_result.stat.exists
    fail_msg: "FAIL: File '{{ sap_hana_install_software_directory }}/{{ __sap_hana_install_fact_sapcar_file_name }}' does not exist."
    success_msg: "PASS: File '{{ sap_hana_install_software_directory }}/{{ __sap_hana_install_fact_sapcar_file_name }}' exists."

- name: SAP HANA hdblcm prepare - Get info about file '{{ sap_hana_install_software_directory }}/{{ __sap_hana_install_fact_sapcar_file_name }}.sha256sum'
  stat:
    path: "{{ sap_hana_install_software_directory }}/{{ __sap_hana_install_fact_sapcar_file_name }}.sha256sum"
  register: __sap_hana_install_register_sapcar_sha256sum_stat_result
  changed_when: no
  failed_when: no

- name: SAP HANA hdblcm prepare - Create checksum file for SAPCAR executable if it does not exist
  shell: "sha256sum {{ sap_hana_install_software_directory }}/{{ __sap_hana_install_fact_sapcar_file_name }} > {{ sap_hana_install_software_directory }}/{{ __sap_hana_install_fact_sapcar_file_name }}.sha256sum"
  when: not __sap_hana_install_register_sapcar_sha256sum_stat_result.stat.exists

- name: SAP HANA hdblcm prepare - Get sha256sum of the SAPCAR executable
  command: "awk '{print $1}' {{ sap_hana_install_software_directory }}/{{ __sap_hana_install_fact_sapcar_file_name }}.sha256sum"
  register: __sap_hana_install_register_sapcar_sha256sum
  changed_when: no

- name: SAP HANA hdblcm prepare - Assert that the SAPCAR checksum is correct
  assert:
    that: __sap_hana_install_register_sapcar_sha256sum.stdout == sap_hana_install_sapcar_file[0].checksum
    fail_msg: "FAIL: The checksum of file '{{ sap_hana_install_software_directory }}/{{ __sap_hana_install_fact_sapcar_file_name }}' executable does not match the content of variable sap_hana_install_sapcar_file[0].checksum."
    success_msg: "PASS: The checksum of file '{{ sap_hana_install_software_directory }}/{{ __sap_hana_install_fact_sapcar_file_name }}' matches the content of variable sap_hana_install_sapcar_file[0].checksum."

- name: SAP HANA hdblcm prepare - Make sure SAPCAR has execute permissions and is owned by root
  ansible.builtin.file:
    path: "{{ sap_hana_install_software_directory }}/{{ __sap_hana_install_fact_sapcar_file_name }}"
    mode: '0755'
    owner: root
    group: root

- name: SAP HANA hdblcm prepare - Set fact list of SAR files from variable if defined
  set_fact:
    __sap_hana_install_fact_components_sar: "{{ sap_hana_install_sarfiles }}"
  when: sap_hana_install_sarfiles is defined

- name: SAP HANA hdblcm prepare - Display SAR files to be extracted
  debug:
    var: __sap_hana_install_fact_components_sar

- name: SAP HANA hdblcm prepare - Extract all SAR files in folder '{{ sap_hana_install_software_directory }}'
  include_tasks: extract_sar.yml
  loop: "{{ __sap_hana_install_fact_components_sar }}"
  loop_control:
    loop_var: passed_sap_hana_install_components_sar
  when: __sap_hana_install_fact_components_sar | length > 0

- name: SAP HANA hdblcm prepare - Remove status file '{{ sap_hana_install_software_extract_directory }}/__EXTRACTION_ONGOING__'
  ansible.builtin.file:
    path: "{{ sap_hana_install_software_extract_directory }}/__EXTRACTION_ONGOING__"
    state: absent

- name: SAP HANA hdblcm prepare - Find 'SAP_HANA_DATABASE' in '{{ sap_hana_install_software_extract_directory }}'
  find:
    paths: "{{ sap_hana_install_software_extract_directory }}"
    recurse: yes
    file_type: directory
    patterns: 'SAP_HANA_DATABASE'
  register: __sap_hana_install_register_find_directory_sap_hana_database

- name: SAP HANA hdblcm prepare - Set fact for 'hdblcm' installer path
  set_fact:
    __sap_hana_install_fact_hdblcm_path:
      "{{ __sap_hana_install_register_find_directory_sap_hana_database.files[0].path }}"
