---

- name: SAP HANA hdblcm prepare - Set fact for temporary extraction directory, default
  set_fact:
    __sap_hana_install_tmp_software_extract_directory: "{{ sap_hana_install_software_extract_directory }}/tmp"
  when: "'SAPHOST' not in passed_sap_hana_install_components_sar"

- name: SAP HANA hdblcm prepare - Set fact for temporary extraction directory, SAP Host Agent
  set_fact:
    __sap_hana_install_tmp_software_extract_directory: "{{ sap_hana_install_software_extract_directory }}/tmp/SAP_HOST_AGENT"
  when: "'SAPHOST' in passed_sap_hana_install_components_sar"

- name: SAP HANA hdblcm prepare - Create temporary extraction directory '{{ __sap_hana_install_tmp_software_extract_directory }}'
  ansible.builtin.file:
    path: "{{ __sap_hana_install_tmp_software_extract_directory }}"
    state: directory
    mode: 0755
    owner: root
    group: root

- name: SAP HANA hdblcm prepare - Create temporary SAR file directory '{{ sap_hana_install_software_extract_directory }}/sarfiles'
  ansible.builtin.file:
    path: "{{ sap_hana_install_software_extract_directory }}/sarfiles"
    state: directory
    mode: 0755
    owner: root
    group: root
  when: sap_hana_install_copy_sarfiles 

- name: SAP HANA hdblcm prepare - Display the name of the SAR file
  debug:
    msg: "Name of SAR file: '{{ passed_sap_hana_install_components_sar }}'"

- name: SAP HANA hdblcm prepare - Copy '{{ passed_sap_hana_install_components_sar }}' to '{{ sap_hana_install_software_extract_directory }}/sarfiles'
  copy:
    src: "{{ sap_hana_install_software_directory }}/{{ passed_sap_hana_install_components_sar }}"
    dest: "{{ sap_hana_install_software_extract_directory }}/sarfiles/{{ passed_sap_hana_install_components_sar }}"
    remote_src: true
    mode: 0755
    owner: root
    group: root
  when: sap_hana_install_copy_sarfiles 

- name: SAP HANA hdblcm prepare - Set fact for directory for copied SAR files 
  set_fact:
    __sap_hana_install_fact_path_to_sarfile: "{{ sap_hana_install_software_extract_directory }}/sarfiles"
  when: sap_hana_install_copy_sarfiles 

- name: SAP HANA hdblcm prepare - Set fact for SAR file directory, default
  set_fact:
    __sap_hana_install_fact_path_to_sarfile: "{{ sap_hana_install_software_directory }}"
  when: not sap_hana_install_copy_sarfiles 

- name: SAP HANA hdblcm prepare - Get info about file '{{ sap_hana_install_software_directory }}/{{ passed_sap_hana_install_components_sar }}.sha256'
  stat:
    path: "{{ sap_hana_install_software_directory }}/{{ passed_sap_hana_install_components_sar }}.sha256"
  check_mode: no
  register: __sap_hana_install_register_stat_sarfile_sha256
  changed_when: no

- name: SAP HANA hdblcm prepare - Notify if checksum verification will be skipped for SAR file
  debug:
    msg: "INFO: File '{{ sap_hana_install_software_directory }}/{{ passed_sap_hana_install_components_sar }}.sh256' does not exist,
          so no checksum verification will be performed for file
          '{{ __sap_hana_install_fact_path_to_sarfile }}/{{ passed_sap_hana_install_components_sar }}'."
  when: not __sap_hana_install_register_stat_sarfile_sha256.stat.exists

- name: SAP HANA hdblcm prepare - Verify checksum for SAR file if checksum file exists
  block:

    - name: SAP HANA hdblcm prepare - Read the sha256 checksum from the checksum file
      command: "awk '{print $1}' {{ sap_hana_install_software_directory }}/{{ passed_sap_hana_install_components_sar }}.sha256"
      check_mode: no
      register: __sap_hana_install_register_sarfile_sha256_from_file
      changed_when: no

    - name: SAP HANA hdblcm prepare - Get info about file '{{ __sap_hana_install_fact_path_to_sarfile }}/{{ passed_sap_hana_install_components_sar }}'
      stat:
        path: "{{ __sap_hana_install_fact_path_to_sarfile }}/{{ passed_sap_hana_install_components_sar }}"
        checksum_algorithm: sha256
      register: __sap_hana_install_register_stat_sarfile
      changed_when: no

    - name: SAP HANA hdblcm prepare - Assert that the checksum of the SAR file is correct
      assert:
        that: __sap_hana_install_register_stat_sarfile.stat.checksum ==
              __sap_hana_install_register_sarfile_sha256_from_file.stdout.split(' ').0
        fail_msg: "FAIL: The checksum of file
           '{{ __sap_hana_install_fact_path_to_sarfile }}/{{ passed_sap_hana_install_components_sar }}'
           does not match the checksum stored in file
           '{{ sap_hana_install_software_directory }}/{{ passed_sap_hana_install_components_sar }}.sha256'!"
        success_msg: "PASS: The checksum of file
           '{{ __sap_hana_install_fact_path_to_sarfile }}/{{ passed_sap_hana_install_components_sar }}'
           matches the checksum stored in file
           '{{ sap_hana_install_software_directory }}/{{ passed_sap_hana_install_components_sar }}.sha256'."

  when: __sap_hana_install_register_stat_sarfile_sha256.stat.exists

- name: SAP HANA hdblcm prepare - Extract file '{{ __sap_hana_install_fact_path_to_sarfile }}/{{ passed_sap_hana_install_components_sar }}'
  command: >-
    {{ sap_hana_install_software_extract_directory }}/sapcar/{{ __sap_hana_install_fact_sapcar_filename }} \
    -R {{ __sap_hana_install_tmp_software_extract_directory }} \
    -xvf {{ __sap_hana_install_fact_path_to_sarfile }}/{{ passed_sap_hana_install_components_sar }} \
    -manifest SIGNATURE.SMF
  register: __sap_hana_install_register_extract
  args:
    chdir: "{{ sap_hana_install_software_extract_directory }}"
  changed_when: "'SAPCAR: processing archive' in __sap_hana_install_register_extract.stdout"

- name: SAP HANA hdblcm prepare - Move files into the correct place, default
  shell: |
    extracted_dir=$(ls -d */)
    mv SIGNATURE.SMF ${extracted_dir}
    mv ${extracted_dir} ..
  args:
    chdir: "{{ __sap_hana_install_tmp_software_extract_directory }}"
  when: "'SAPHOST' not in passed_sap_hana_install_components_sar"

- name: SAP HANA hdblcm prepare - Move files into the correct place, SAP Host Agent
  command: mv ./tmp/SAP_HOST_AGENT .
  args:
    chdir: "{{ sap_hana_install_software_extract_directory }}"
  when: "'SAPHOST' in passed_sap_hana_install_components_sar"

- name: SAP HANA hdblcm prepare - Remove temporary extraction directory '{{ sap_hana_install_software_extract_directory }}/tmp'
  ansible.builtin.file:
    path: "{{ sap_hana_install_software_extract_directory }}/tmp/"
    state: absent

- name: SAP HANA hdblcm prepare - Remove temporary SAR file directory '{{ sap_hana_install_software_extract_directory }}/sarfiles'
  ansible.builtin.file:
    path: "{{ sap_hana_install_software_extract_directory }}/sarfiles/"
    state: absent
  when: 
    - sap_hana_install_copy_sarfiles 
    - not sap_hana_install_keep_copied_sarfiles

