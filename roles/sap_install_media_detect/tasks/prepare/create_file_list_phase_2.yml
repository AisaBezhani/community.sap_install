---

# The fact variables are appended in tasks of this file, so they need to be initialized explicitly.
# With implicit initialization (by using the default filter), the variables would be appended again if the role
# was called more than once in a playbook.
# See https://github.com/sap-linuxlab/community.sap_install/issues/402 .
- name: SAP Install Media Detect - Prepare - Initialize fact variables
  ansible.builtin.set_fact:
    __sap_install_media_detect_fact_find_result_phase_2: []
    __sap_install_media_detect_fact_files_sapfile_results: []

- name: SAP Install Media Detect - Prepare - Create final list of all files on the top level of 'sap_install_media_detect_source_directory'
  ansible.builtin.find:
    paths: "{{ sap_install_media_detect_source_directory }}"
    patterns: '*'
    recurse: false
    use_regex: false
  register: __sap_install_media_detect_register_find_result_phase_2

- name: SAP Install Media Detect - Prepare - Set fact from find result, phase 2
  ansible.builtin.set_fact:
    __sap_install_media_detect_fact_find_result_phase_2: "{{ __sap_install_media_detect_fact_find_result_phase_2 + [item.path] }}"
  loop: "{{ __sap_install_media_detect_register_find_result_phase_2.files }}"

- name: SAP Install Media Detect - Prepare - Iterate over files and determine file type
  ansible.builtin.shell: set -o pipefail && {{ __sap_install_media_detect_sapfile_path }} -l {{ line_item }} | awk '{print $(NF-1), $NF}'
  register: __sap_install_media_detect_register_files_phase_2
  loop: "{{ __sap_install_media_detect_fact_find_result_phase_2 }}"
  loop_control:
    loop_var: line_item
  changed_when: false

- name: SAP Install Media Detect - Prepare - Set fact with the results of the sapfile command
  ansible.builtin.set_fact:
    __sap_install_media_detect_fact_files_sapfile_results: "{{ __sap_install_media_detect_fact_files_sapfile_results + [__new_dict] }}"
  loop: "{{ __sap_install_media_detect_register_files_phase_2.results }}"
  vars:
    __new_dict:
      dir: "{{ item.line_item | dirname }}"
      file: "{{ item.line_item | basename }}"
      sap_file_type: "{{ item.stdout.split(' ')[0] }}"
      archive_type: "{{ item.stdout.split(' ')[1] }}"
  when:
    (item.stdout.split(' ')[0] == 'sapcar') or
    (sap_install_media_detect_swpm | d('false') and item.stdout.split(' ')[0] == 'sap_swpm') or
    (sap_install_media_detect_hostagent | d('false') and item.stdout.split(' ')[0] == 'sap_hostagent') or
    (sap_install_media_detect_igs | d('false') and item.stdout.split(' ')[0] == 'sap_igs') or
    (sap_install_media_detect_kernel | d('false') and item.stdout.split(' ')[0] == 'sap_kernel') or
    (sap_install_media_detect_webdisp | d('false') and item.stdout.split(' ')[0] == 'sap_webdisp') or
    (sap_install_media_detect_db == 'sapmaxdb' and item.stdout.split(' ')[0] == 'sap_db_maxdb') or
    (sap_install_media_detect_db == 'sapase' and (
       item.stdout.split(' ')[0] == 'sap_db_ase' or
       item.stdout.split(' ')[0] == 'sap_db_ase_client')
    ) or
    (sap_install_media_detect_db == 'oracledb' and (
       item.stdout.split(' ')[0] == 'sap_db_oracle' or
       item.stdout.split(' ')[0] == 'sap_db_oracle_client')
    ) or
    (sap_install_media_detect_db == 'ibmdb2' and (
       item.stdout.split(' ')[0] == 'sap_db_db2' or
       item.stdout.split(' ')[0] == 'sap_db_db2_client' or
       item.stdout.split(' ')[0] == 'sap_db_db2_license')
    ) or
    (sap_install_media_detect_export == 'saps4hana' and item.stdout.split(' ')[0] == 'sap_s4hana_export') or
    (sap_install_media_detect_export == 'sapbw4hana' and item.stdout.split(' ')[0] == 'sap_bw4hana_export') or
    (sap_install_media_detect_export == 'sapnwas_abap' and item.stdout.split(' ')[0] == 'sap_nwas_abap_export') or
    (sap_install_media_detect_export == 'sapnwas_java' and item.stdout.split(' ')[0] == 'sap_nwas_java_export') or
    (sap_install_media_detect_export == 'sapecc' and item.stdout.split(' ')[0] == 'sap_ecc_export') or
    (sap_install_media_detect_export == 'sapecc_ides' and item.stdout.split(' ')[0] == 'sap_ecc_ides_export')

- name: SAP Install Media Detect - Organize all files - Identify the sapcar program
  ansible.builtin.set_fact:
    __sap_install_media_detect_fact_sapcar_path: "{{ sap_install_media_detect_target_directory }}/{{ item.line_item | basename }}"
  loop: "{{ __sap_install_media_detect_register_files_phase_2.results }}"
  when: item.stdout.split(' ')[0] == 'sapcar'

- name: SAP Install Media Detect - Prepare - Display the file dict, phase 2
  ansible.builtin.debug:
    var: __sap_install_media_detect_fact_files_sapfile_results

- name: SAP Install Media Detect - Prepare - Display the path to the sapcar program
  ansible.builtin.debug:
    var: __sap_install_media_detect_fact_sapcar_path
