---
# After NetWeaver ASCS/ERS instances were configured in the cluster,
# they must be disabled from automatically (re)starting outside of
# cluster control.

- name: "SAP HA Pacemaker - (ASCS profile) Prevent automatic restart of enqueue server"
  ansible.builtin.replace:
    path: "{{ sap_ha_pacemaker_cluster_netweaver_abap_ascs_sapinstance_start_profile_string }}"
    backup: true
    regexp: 'Restart_Program_01'
    replace: 'Start_Program_01'

- name: "SAP HA Pacemaker - (ERS profile) Prevent automatic restart"
  ansible.builtin.replace:
    path: "{{ sap_ha_pacemaker_cluster_netweaver_abap_ers_sapinstance_start_profile_string }}"
    backup: true
    regexp: 'Restart_Program_00'
    replace: 'Start_Program_00'

# Comment out lines in /usr/sap/sapservices, which
# - contain the target instance profile names
# - are not commented out yet
- name: "SAP HA Pacemaker - Update /usr/sap/sapservices"
  ansible.builtin.replace:
    path: /usr/sap/sapservices
    backup: true
    regexp: '^([^#\n].+{{ sapserv_item }}.+)$'
    replace: '# \1'
  loop:
    - "{{ sap_ha_pacemaker_cluster_netweaver_abap_ascs_sapinstance_instance_name }}"
    - "{{ sap_ha_pacemaker_cluster_netweaver_abap_ers_sapinstance_instance_name }}"
  loop_control:
    loop_var: sapserv_item

- name: "SAP HA Pacemaker - (systemd) Check for ASCS/ERS services"
  ansible.builtin.stat:
    path: "/etc/systemd/system/SAP{{ sap_ha_pacemaker_cluster_netweaver_sid }}_{{ systemd_item }}.service"
  loop:
    - "{{ sap_ha_pacemaker_cluster_netweaver_abap_ascs_instance_number }}"
    - "{{ sap_ha_pacemaker_cluster_netweaver_abap_ers_instance_number }}"
  loop_control:
    loop_var: systemd_item
    label: "SAP{{ sap_ha_pacemaker_cluster_netweaver_sid }}_{{ systemd_item }}.service"
  register: __sap_ha_pacemaker_cluster_register_instance_service

- name: "SAP HA Pacemaker - (systemd) Save found ASCS/ERS services"
  ansible.builtin.set_fact:
    sap_ha_pacemaker_cluster_instance_services_fact: "{{
      __sap_ha_pacemaker_cluster_register_instance_service.results
      | selectattr('stat.exists')
      | map(attribute='stat.path')
      | regex_replace('/etc/systemd/system/', '')
      }}"

# BLOCK:
# When the systemd based SAP startup framework is used, make sure that the
# instance services do not auto-start.
- name: "SAP HA Pacemaker - Block to disable systemd auto-start of instances"
  when:
    - sap_ha_pacemaker_cluster_instance_services_fact is defined
    - sap_ha_pacemaker_cluster_instance_services_fact | length > 0
  block:

    - name: "SAP HA Pacemaker - (systemd) Disable ASCS/ERS instance units"
      ansible.builtin.service:
        name: "{{ instance_srv_item }}"
        enabled: false
      loop: "{{ sap_ha_pacemaker_cluster_instance_services_fact }}"
      loop_control:
        loop_var: instance_srv_item

    # Creates a config file for the services.
    # Parent directories will be created when missing.
    - name: "SAP HA Pacemaker - (systemd) Create ASCS/ERS instance unit config file"
      ansible.builtin.lineinfile:
        create: true
        path: "/etc/systemd/system/{{ dropfile_item }}.d/HA.conf"
        line: "[Service]"
        owner: root
        group: root
        mode: '0644'
      loop: "{{ sap_ha_pacemaker_cluster_instance_services_fact }}"
      loop_control:
        loop_var: dropfile_item

    - name: "SAP HA Pacemaker - (systemd) Disable ASCS/ERS instance unit auto-restart"
      ansible.builtin.lineinfile:
        path: "/etc/systemd/system/{{ dropfile_item }}.d/HA.conf"
        regex: '^Restart\s*=\s*no'
        insertafter: '^[Service]$'
        line: "Restart=no"
        owner: root
        group: root
        mode: '0644'
      loop: "{{ sap_ha_pacemaker_cluster_instance_services_fact }}"
      loop_control:
        loop_var: dropfile_item
